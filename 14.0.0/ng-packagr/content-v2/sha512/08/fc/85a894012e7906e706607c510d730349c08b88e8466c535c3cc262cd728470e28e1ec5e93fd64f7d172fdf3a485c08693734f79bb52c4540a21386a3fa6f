{"hash":"65c9a2de115905c931a8eb4c986ee77dd27a344e","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\n\nclass NgxMdService {\n    constructor() { }\n}\nNgxMdService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxMdService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass NgxMdComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nNgxMdComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxMdComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.0\", type: NgxMdComponent, selector: \"lib-ngx-md\", ngImport: i0, template: `\n    <p>\n      ngx-md works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-ngx-md', template: `\n    <p>\n      ngx-md works!\n    </p>\n  ` }]\n        }], ctorParameters: function () { return []; } });\n\nclass NgxMdModule {\n}\nNgxMdModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxMdModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdModule, declarations: [NgxMdComponent], exports: [NgxMdComponent] });\nNgxMdModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NgxMdComponent\n                    ],\n                    imports: [],\n                    exports: [\n                        NgxMdComponent\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-md\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxMdComponent, NgxMdModule, NgxMdService };\n//# sourceMappingURL=ngx-md.mjs.map\n","map":{"version":3,"file":"ngx-md.mjs","sources":["../../../projects/ngx-md/src/lib/ngx-md.service.ts","../../../projects/ngx-md/src/lib/ngx-md.component.ts","../../../projects/ngx-md/src/lib/ngx-md.module.ts","../../../projects/ngx-md/src/public-api.ts","../../../projects/ngx-md/src/ngx-md.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMdService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-md',\n  template: `\n    <p>\n      ngx-md works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxMdComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxMdComponent } from './ngx-md.component';\n\n\n\n@NgModule({\n  declarations: [\n    NgxMdComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    NgxMdComponent\n  ]\n})\nexport class NgxMdModule { }\n","/*\n * Public API Surface of ngx-md\n */\n\nexport * from './lib/ngx-md.service';\nexport * from './lib/ngx-md.component';\nexport * from './lib/ngx-md.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;MAKa,YAAY,CAAA;AAEvB,IAAA,WAAA,GAAA,GAAiB;;yGAFN,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAFX,MAAM,EAAA,CAAA,CAAA;2FAEP,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCQY,cAAc,CAAA;AAEzB,IAAA,WAAA,GAAA,GAAiB;IAEjB,QAAQ,GAAA;KACP;;2GALU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,cAAc,EARf,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;AAIT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FAIU,cAAc,EAAA,UAAA,EAAA,CAAA;kBAV1B,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,YAAY,EACZ,QAAA,EAAA,CAAA;;;;AAIT,EAAA,CAAA,EAAA,CAAA;;;MCOU,WAAW,CAAA;;wGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAX,WAAW,EAAA,YAAA,EAAA,CARpB,cAAc,CAAA,EAAA,OAAA,EAAA,CAKd,cAAc,CAAA,EAAA,CAAA,CAAA;yGAGL,WAAW,EAAA,CAAA,CAAA;2FAAX,WAAW,EAAA,UAAA,EAAA,CAAA;kBAVvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,cAAc;AACf,qBAAA;AACD,oBAAA,OAAO,EAAE,EACR;AACD,oBAAA,OAAO,EAAE;wBACP,cAAc;AACf,qBAAA;AACF,iBAAA,CAAA;;;ACdD;;AAEG;;ACFH;;AAEG;;;;"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\n\nclass NgxMdService {\n    constructor() { }\n}\nNgxMdService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxMdService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass NgxMdComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nNgxMdComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNgxMdComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.0\", type: NgxMdComponent, selector: \"lib-ngx-md\", ngImport: i0, template: `\n    <p>\n      ngx-md works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-ngx-md', template: `\n    <p>\n      ngx-md works!\n    </p>\n  ` }]\n        }], ctorParameters: function () { return []; } });\n\nclass NgxMdModule {\n}\nNgxMdModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxMdModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdModule, declarations: [NgxMdComponent], exports: [NgxMdComponent] });\nNgxMdModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.0\", ngImport: i0, type: NgxMdModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        NgxMdComponent\n                    ],\n                    imports: [],\n                    exports: [\n                        NgxMdComponent\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-md\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxMdComponent, NgxMdModule, NgxMdService };\n//# sourceMappingURL=ngx-md.mjs.map\n","map":{"version":3,"file":"ngx-md.mjs","sources":["../../../projects/ngx-md/src/lib/ngx-md.service.ts","../../../projects/ngx-md/src/lib/ngx-md.component.ts","../../../projects/ngx-md/src/lib/ngx-md.module.ts","../../../projects/ngx-md/src/public-api.ts","../../../projects/ngx-md/src/ngx-md.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMdService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-md',\n  template: `\n    <p>\n      ngx-md works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxMdComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxMdComponent } from './ngx-md.component';\n\n\n\n@NgModule({\n  declarations: [\n    NgxMdComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    NgxMdComponent\n  ]\n})\nexport class NgxMdModule { }\n","/*\n * Public API Surface of ngx-md\n */\n\nexport * from './lib/ngx-md.service';\nexport * from './lib/ngx-md.component';\nexport * from './lib/ngx-md.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;MAKa,YAAY,CAAA;AAEvB,IAAA,WAAA,GAAA,GAAiB;;yGAFN,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAFX,MAAM,EAAA,CAAA,CAAA;2FAEP,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;iBACnB,CAAA;;;MCQY,cAAc,CAAA;AAEzB,IAAA,WAAA,GAAA,GAAiB;IAEjB,QAAQ,GAAA;KACP;;2GALU,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,cAAc,EARf,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;AAIT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;2FAIU,cAAc,EAAA,UAAA,EAAA,CAAA;kBAV1B,SAAS;YACE,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,YAAY,EACZ,QAAA,EAAA,CAAA;;;;AAIT,EAAA,CAAA,EAAA,CAAA;;;MCOU,WAAW,CAAA;;wGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAX,WAAW,EAAA,YAAA,EAAA,CARpB,cAAc,CAAA,EAAA,OAAA,EAAA,CAKd,cAAc,CAAA,EAAA,CAAA,CAAA;yGAGL,WAAW,EAAA,CAAA,CAAA;2FAAX,WAAW,EAAA,UAAA,EAAA,CAAA;kBAVvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,cAAc;AACf,qBAAA;AACD,oBAAA,OAAO,EAAE,EACR;AACD,oBAAA,OAAO,EAAE;wBACP,cAAc;AACf,qBAAA;iBACF,CAAA;;;ACdD;;AAEG;;ACFH;;AAEG;;;;"}}}